<?xml version="1.0"?>
<robot name="mimawari_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- materials -->
  <xacro:include filename="$(find mimawari_bot_description)/src/description/materials.urdf" />
  
  <!-- parts -->
  <xacro:include filename="$(find mimawari_bot_description)/src/description/head/head_realsense.urdf.xacro" />

  <!-- Define robot constants -->

  <xacro:property name="base_width" value="0.16"/>
  <xacro:property name="base_length" value="0.21"/>
  <xacro:property name="base_height" value="0.01"/>
  <xacro:property name="base_zoff" value="0.0"/>    
  <xacro:property name="perception_deck_xoff" value="0.057"/>  
  <xacro:property name="perception_deck_zoff" value="0.105"/>
  <xacro:property name="perception_deck2_zoff" value="0.21"/>

  <xacro:property name="wheel_radius" value="0.0345"/>
  <xacro:property name="wheel_width" value="0.027"/>
  <xacro:property name="wheel_ygap" value="0.03"/>
  <xacro:property name="wheel_zoff" value="0.0305"/>
  <xacro:property name="wheel_xoff" value="0.085"/>

  <xacro:property name="pole_yoff" value="0.075"/>

  <xacro:property name="M_PI" value="3.14159"/>
  <!--- <xacro:property name="path_meshes" value="$(find mimawari_bot_description)/src/description/meshes"/> -->
  <!--- <xacro:property name="path_meshes" value="package://mimawari_bot_description)/src/description/meshes"/>  -->
  <xacro:property name="path_meshes" value="file://$(find mimawari_bot_description)/src/description/meshes"/>


  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0.0 0.00 ${base_zoff}"/>
      <material name="blue">
        <color rgba="0 0 .8 1"/>
      </material>
    </visual>
  </link>

  <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <link name="perception_deck">
    <visual>
      <geometry>
        <box size="0.11 0.16 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="0 0 .8 1"/>
      </material>
    </visual>
  </link>

  <joint name="base_to_perception_deck" type="fixed">
    <parent link="base_link"/>
    <child link="perception_deck"/>
    <origin xyz="${perception_deck_xoff} 0 ${(base_zoff + perception_deck_zoff)}"/>
  </joint>    

  <link name="perception_deck2">
    <visual>
      <geometry>
        <box size="0.11 0.16 0.01"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="blue">
        <color rgba="0 0 .8 1"/>
      </material>
    </visual>
  </link>

  <joint name="base_to_perception_deck2" type="fixed">
    <parent link="base_link"/>
    <child link="perception_deck2"/>
    <origin xyz="${perception_deck_xoff} 0 ${(base_zoff + perception_deck2_zoff)}"/>
  </joint>   

  <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black">
          <color rgba="0 0 0 1"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${(base_zoff - wheel_zoff)}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>  

  <xacro:wheel prefix="wheel_left" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="wheel_right" x_reflect="-1" y_reflect="-1" />


  <link name="caster_wheel">
    <visual>
      <geometry>
        <cylinder length="0.012" radius="0.025"/>
      </geometry>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
  </link>

  <joint name="base_to_caster_wheel" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="0.07 0.00 ${base_zoff-0.04}"/>
  </joint>  

  <link name="wheel_track">
    <visual>
      <geometry>
        <box size="0.04 0.19 0.002"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="Gray">
        <color rgba="0.5 0.5 0.5 1.0"/>
      </material>
    </visual>
  </link>

  <joint name="base_to_wheel_track" type="fixed">
    <parent link="base_link"/>
    <child link="wheel_track"/>
    <origin xyz="-0.085 0.0 ${base_zoff-0.005}"/>
  </joint>  


  <!-- Poles -->
  <xacro:macro name="poles" params="prefix xoff y_reflect pole_zoff">
    <link name="${prefix}_pole">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
            <box size="0.01 0.01 0.095"/>
          </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    </link>

    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_pole"/>
      <origin xyz="${xoff} ${y_reflect*pole_yoff} ${(base_zoff + pole_zoff)}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>  

  <xacro:poles prefix="leftL1_one" xoff="0.017" y_reflect="1" pole_zoff="0.0525" />
  <xacro:poles prefix="leftL1_two" xoff="0.08" y_reflect="1" pole_zoff="0.0525" />
  <xacro:poles prefix="rightL1_one" xoff="0.017" y_reflect="-1" pole_zoff="0.0525" />
  <xacro:poles prefix="rightL1_two" xoff="0.08" y_reflect="-1" pole_zoff="0.0525" /> 

  <xacro:poles prefix="leftL2_one" xoff="0.017" y_reflect="1" pole_zoff="0.1575" />
  <xacro:poles prefix="leftL2_two" xoff="0.08" y_reflect="1" pole_zoff="0.1575" />
  <xacro:poles prefix="rightL2_one" xoff="0.017" y_reflect="-1" pole_zoff="0.1575" />
  <xacro:poles prefix="rightL2_two" xoff="0.08" y_reflect="-1" pole_zoff="0.1575" /> 

  <!-- Laser -->
  <link name="laser">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.04"/>
      </geometry>
      <material name="black"/>
    </visual>
  </link>


  <joint name="base_to_laser" type="fixed">
    <parent link="base_link"/>
    <child link="laser"/>
    <origin xyz="0.065 0.0 ${0.131 + base_zoff}"/>
  </joint>

  <!-- Camera -->
  <xacro:mimawari_bot_head_realsense name="camera" use_nominal_extrinsics="true" />

</robot>
